{"version":3,"sources":["components/PatientInfo.js","components/ListPatient.js","components/CovidMap.js","components/SeekBar.js","components/CovidDashboard.js","components/ChartVN.js","components/ChartWorld.js","components/ChartDashboard.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["PatientInfo","name","address","note","verifyDate","style","paddingRight","ListPatient","patients","reft","choosePatient","currentPatient","overflowY","height","margin","padding","map","patient","index","Row","key","ref","onClick","Col","xs","textAlign","CovidMap","onPatientMarkerClicked","Map","center","lat","lng","zoom","TileLayer","attribution","url","Marker","position","Popup","SeekBar","timeFrom","timeTo","valueSeekBar","handleChange","min","moment","ISO_8601","valueOf","max","marks","value","display","justifyContent","Slider","width","valueLabelFormat","format","ValueLabelComponent","props","children","open","Tooltip","enterTouchDelay","placement","title","aria-labelledby","step","valueLabelDisplay","onChange","CovidDashboard","startDate","useState","setCurrentPatient","currentListPatient","setcurrentListPatient","setPatients","setReft","setValueSeekBar","isPlay","setIsPlay","useEffect","fetch","then","res","json","result","data","sort","a","b","Array","length","fill","React","createRef","error","timer","setTimeout","epoch","filter","item","clearTimeout","Container","fluid","className","id","paddingLeft","minHeight","indexOf","scrollIntoView","behavior","paddingBottom","backgroundColor","paddingTop","borderBottom","event","newValue","selectedDate","IconButton","borderRadius","variant","color","regexDay","ChartVN","refChart","field","dataInfection","setDataInfection","dataMaybeInfection","setDataMaybeInfection","dataCured","setDataCured","Object","keys","day","date","exec","ts","push","x","y","console","log","highcharts","Highcharts","options","chart","animation","type","text","xAxis","gridLineWidth","dateTimeLabelFormats","millisecond","second","minute","hour","week","month","year","crosshair","yAxis","legend","layout","align","enabled","plotOptions","series","marker","radius","events","lineWidth","turboThreshold","tooltip","positioner","this","plotLeft","plotTop","shadow","borderWidth","shared","visible","ChartWorld","formatDay","includes","ChartDashboard","Header","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5d078912.chunk.js","sourcesContent":["import React from 'react';\n\nconst PatientInfo = ({name, address, note, verifyDate}) => {\n    return <ul style={{paddingRight:'20px'}}>\n        <li ><b>Name: </b> {name}</li>\n        <li><b>Address: </b> {address}</li>\n        <li><b>Note: </b> {note}</li>\n        <li><b>Verify Date:  </b> {verifyDate}</li>\n    </ul>\n};\n\nexport default PatientInfo;","import React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst ListPatient = ({patients, reft,choosePatient,currentPatient }) => {\n  return (\n    <div  style={{ overflowY: 'scroll', height: '60%', margin:'0', padding:'0 10px'}}>\n      {\n      patients && \n      patients.map((patient, index) => {\n         return  <Row key={\"patient\"+index} ref={(ref)=>{reft[index] = ref}} style={(currentPatient && currentPatient.name == patient.name)?{'backgroundColor':'#e0e0e0'}:{}} onClick={()=>{choosePatient(patient)}}> \n         <Col key={\"patient\"+index+patient.name} xs={6} style={{textAlign:'center'}}>{patient.name}</Col>\n         <Col key={\"patient\"+index+patient.verifyDate} xs={6} style={{textAlign:'center'}} >{patient.verifyDate}</Col>\n     </Row>\n      })}\n    </div>\n)\n};\n\nexport default ListPatient;","import React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\n\nconst CovidMap = ({onPatientMarkerClicked, patients,currentPatient}) => {\n    return <Map center={currentPatient ?[currentPatient.lat, currentPatient.lng]: [10.762887, 106.6800684]} zoom={13}>\n        <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png   \"\n        />\n        {patients && patients.map((patient,index) => <Marker key={'marker'+index} position={[patient.lat, patient.lng]} onClick={() => {onPatientMarkerClicked(patient)}}>\n            <Popup>\n                <ul key={'ul'+index}>\n                    <li key={'li'+index+'name'}>Name: {patient.name}</li>\n                    <li key={'li'+index+'address'}>Address: {patient.address}</li>\n                    <li key={'li'+index+'note'}>Note: {patient.note}</li>\n                    <li key={'li'+index+'verify'}>Verify date: {patient.verifyDate}</li>\n                </ul>\n            </Popup>\n        </Marker>)}\n    </Map>;\n};\n\nexport default CovidMap;\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport moment from 'moment'\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst SeekBar = ({timeFrom, timeTo,valueSeekBar, handleChange}) => {\n  const min = moment(timeFrom,moment.ISO_8601).valueOf();\n  const max =  moment(timeTo,moment.ISO_8601).valueOf();\n  const marks = [\n    {\n      value:min\n    },\n    {\n      value: max\n    },\n  ];\n\n  const valueLabelComponent = (props)=>{\n    const { children, open, value } = props;\n    return (\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n        {children}\n      </Tooltip>\n    );\n  }\n  const valueLabelFormat= (value)=> {\n    return moment(value).format('DD/MM/YYYY')\n  }\n    return <div style={{display:'flex', justifyContent:'center'}}>\n      <Slider        style={{width:'70%'}}\n                     value={ moment(valueSeekBar,moment.ISO_8601).valueOf()}\n                     valueLabelFormat={valueLabelFormat}\n                     ValueLabelComponent={valueLabelComponent}\n                     aria-labelledby=\"discrete-slider-restrict\"\n                     step={86400000}\n                     valueLabelDisplay=\"on\"\n                     max={max}\n                     min={min}\n                     onChange={handleChange}\n                     marks={marks}/>\n      </div>\n};\n\nexport default SeekBar;","import React, { useEffect, useState } from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport PatientInfo from \"./PatientInfo\";\nimport ListPatient from \"./ListPatient\";\nimport Container from \"react-bootstrap/Container\";\nimport CovidMap from \"./CovidMap\";\nimport SeekBar from \"./SeekBar\";\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\n\nconst CovidDashboard = (props) => {\n    const startDate = \"2019-12-08T00:00:00\"\n    const [currentPatient, setCurrentPatient] = useState();\n    const [currentListPatient, setcurrentListPatient] = useState();\n    const [patients, setPatients] = useState([]);\n    const [reft, setReft] = useState([]);\n    const [valueSeekBar, setValueSeekBar] = useState(startDate)\n    const [isPlay, setIsPlay] = useState(false)\n    const patientMarkerClickedHandler = (patient) => {\n        setCurrentPatient(patient);\n        reft[patients.indexOf(patient)].scrollIntoView({ behavior: \"smooth\" })\n\n    }\n    const choosePatient = (patient) => {\n        setCurrentPatient(patient);\n    }\n    const handleChangeDate = (event, newValue) => {\n        const selectedDate = moment(newValue).format('YYYY-MM-DDTHH:mm:ss');\n        if (patients) {\n            setcurrentListPatient([...patients].filter(item => (item.verifyDate <= selectedDate && item.verifyDate >= startDate)))\n            if (selectedDate !== valueSeekBar) {\n                setValueSeekBar(selectedDate);\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetch(\"https://cors-anywhere.herokuapp.com/https://maps.vnpost.vn/apps/covid19/api/patientapi/list\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setPatients(result.data.sort((a, b) => (a.verifyDate > b.verifyDate) ? -1 : ((a.verifyDate < b.verifyDate) ? 1 : 0)));\n                    setReft(new Array(result.data.length).fill(React.createRef()));\n                },\n                (error) => {\n                }\n            )\n    }, [])\n\n    useEffect(() => {\n        let timer = null;\n        if (isPlay) {\n            timer = setTimeout(() => {\n                const epoch = moment(valueSeekBar, moment.ISO_8601).valueOf();\n                setValueSeekBar(moment(epoch + 86400000).format('YYYY-MM-DDTHH:mm:ss'))\n                setcurrentListPatient([...patients].filter(item => (item.verifyDate <= moment(epoch).format('YYYY-MM-DDTHH:mm:ss') && item.verifyDate >= startDate)))\n            }, 200);\n        }\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [valueSeekBar, isPlay]);\n    return <Container fluid>\n\n        <div className=\"chart-monitor row\" style={{margin:'0 20px'}} >\n            <div id=\"chart-line\" style={{paddingLeft:0}} className=\"col-12 col-lg-8 col-xl-8\">\n                <div className=\"panel\">\n                    <div className=\"panel-body\" style={{ minHeight: '400px' }}>\n                        <CovidMap currentPatient={currentPatient} patients={currentListPatient} onPatientMarkerClicked={patientMarkerClickedHandler} />\n                    </div>\n                </div>\n            </div>\n\n            <div id=\"chart-pie\" className=\"col-12 col-lg-4 col-xl-4\" style={{paddingRight:0, height: '400px'}}>\n                <div className=\"row quickInfo\" style={{paddingBottom:'10px'}}>\n                    <div className=\"panel\" style={{height:'100%'}}>\n                        <div className=\"panel-body\">\n                            <h3 style={{ textAlign: \"center\" }}>List patients</h3>\n                            <Row style={{ margin: '0', backgroundColor: '#d0d0d0' }}>\n                                <Col xs={6} style={{ textAlign: 'center' }}>Number patient</Col>\n                                <Col xs={6} style={{ textAlign: 'center' }} >Date</Col>\n                            </Row>\n                            {(reft) && <ListPatient patients={currentListPatient} reft={reft} choosePatient={choosePatient} currentPatient={currentPatient} />}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row quickInfo\" style={{paddingTop:'10px'}}>\n                    <div className=\"panel\" style={{ paddingLeft: '0', paddingRight: '0' }} >\n                        <div className=\"panel-body \" style={{ padding: '0' }}>\n                            <h3 style={{ textAlign: \"center\" }}>Patient Infomation</h3>\n                            {currentPatient &&\n                                <PatientInfo name={currentPatient.name} style={{ borderBottom: '3px solid #333', height: '50%' }} address={currentPatient.address} note={currentPatient.note}\n                                    verifyDate={currentPatient.verifyDate} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n        <div className=\"chart-monitor\" style={{margin:'15px 20px'}}>\n            <div className=\"col-12 col-lg-12 col-xl-12\" style={{paddingRight:0, paddingLeft:0}}>\n                <div className=\"panel\">\n                    <div className=\"panel-body\">\n                        <div style={{minHeight: '30px'}}>\n                            {\n                                patients[0] && <SeekBar timeFrom={startDate} timeTo={patients[0].verifyDate} valueSeekBar={valueSeekBar} handleChange={handleChangeDate}></SeekBar>\n                            }\n                        </div>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <IconButton style={{ margin: '10px', borderRadius: '25% 25%' }} variant=\"contained\" color=\"primary\" onClick={() => { setIsPlay(!isPlay); }}>\n                                {isPlay ? <PlayArrowIcon></PlayArrowIcon> : <PauseIcon></PauseIcon>}\n                            </IconButton>\n                            <IconButton style={{ margin: '10px', borderRadius: '25% 25%' }} variant=\"contained\" color=\"primary\" onClick={() => {\n                                setIsPlay(false);\n                                setValueSeekBar(startDate)\n                            }}>\n                                <RotateLeftIcon></RotateLeftIcon>\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Container>\n};\n\nexport default CovidDashboard;","import React, { useState, useEffect } from 'react'\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\n\nconst regexDay = /\\d*\\/\\d*/;\nconst ChartVN = ({refChart, field}) => {\n  const [dataInfection, setDataInfection] = useState([]);\n  const [dataMaybeInfection, setDataMaybeInfection] = useState([]);\n  const [dataCured, setDataCured] = useState([]);\n  // const chartHeight = (window.innerHeight) / 3;\n  // const chartWidth = (window.innerWidth/12*8.5);\n  \n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://td.fpt.ai/corona/corona-chart-vn.json\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n              if(result){\n                let dataInfection = [];\n                let dataMaybeInfection = [];\n                let dataCured = [];\n                Object.keys(result).map(day=>{\n                  const date = (regexDay.exec(day))[0];\n                  const ts = moment(date,'D/M').valueOf()+24*60*60*1000; //plus 1 day \n                  dataInfection.push({x:ts, y: result[day][0]});\n                  dataMaybeInfection.push({x:ts, y: result[day][1]});\n                  dataCured.push({x:ts, y: result[day][2]});\n                });\n                console.log(result);\n                dataInfection.sort((a,b)=>a.x> b.x? 1:-1)\n                dataMaybeInfection.sort((a,b)=>a.x> b.x? 1:-1)\n                dataCured.sort((a,b)=>a.x> b.x? 1:-1)\n                setDataInfection(dataInfection);\n                setDataMaybeInfection(dataMaybeInfection);\n                setDataCured(dataCured);\n              }\n            },\n            (error) => {\n            }\n        )\n}, [])\n\n\n  return <div className=\"chart\">\n    <HighchartsReact highcharts={Highcharts}\n      options={{\n        chart: {\n          animation: false,\n          type: 'spline',\n          // height: chartHeight + \"px\"\n        },\n        title: {\n          text: 'Covid tại Việt Nam'\n        },\n        xAxis: {\n          gridLineWidth: 1,\n          dateTimeLabelFormats: {\n              millisecond: '%H:%M:%S.%L',\n              second: '%H:%M:%S',\n              minute: '%H:%M',\n              hour: '%H:%M',\n              day: '%e. %b',\n              week: '%e. %b',\n              month: \"%b '%y\",\n              year: '%Y'\n          },\n          type: 'datetime',\n          crosshair: true,\n        },\n        yAxis: {\n          title: {\n            text: 'Số Người'\n          },\n          min: 0\n        },\n        legend: {\n          layout: 'horizontal',\n          align: 'center',\n          enabled: true,\n          // itemDistance:  (chartWidth * 0.9 - 80 * 7) / 7,\n        },\n        plotOptions: {\n          series: {\n            marker: {\n              enabled: false,\n              radius: 3,\n            },\n            events: {\n            },\n            lineWidth: 1\n          }\n        },\n        turboThreshold: 0,\n        tooltip: {\n          positioner: function () {\n            return {\n              x: this.chart.plotLeft,\n              y: this.chart.plotTop - 30\n            };\n          },\n          shadow: false,\n          borderWidth: 0,\n          backgroundColor: 'rgba(0,0,0,0.1)',\n          shared: true,\n        },\n        series: [\n          { name: 'Lây nhiễm', id: '0', \"turboThreshold\": 0, data:dataInfection, visible: true},\n          { name: 'Nghi nhiễm', id: '1', \"turboThreshold\": 0, data:dataMaybeInfection,visible: true},\n          { name: 'Khỏi', id: '2', \"turboThreshold\": 0, data:dataCured,visible: true}\n        ]\n      }}\n    />\n  </div>\n}\n\nexport default ChartVN;","import React, { useState, useEffect } from 'react'\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\n\nconst ChartWorld = ({refChart, field}) => {\n  const [dataInfection, setDataInfection] = useState([]);\n  const [dataMaybeInfection, setDataMaybeInfection] = useState([]);\n  const [dataCured, setDataCured] = useState([]);\n  // const chartHeight = (window.innerHeight) / 3;\n  // const chartWidth = (window.innerWidth/12*8.5);\n  \n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://td.fpt.ai/corona/corona-total.json\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n              if(result){\n                let dataInfection = [];\n                let dataMaybeInfection = [];\n                let dataCured = [];\n                Object.keys(result).map(day=>{\n                  let formatDay;\n                  if(day.includes(\"Dec\")){\n                    formatDay  = day +' 2019';\n                  }else{\n                    formatDay = day +' 2020'\n                  }\n                  const ts = moment(formatDay,'MMM D YYYY').valueOf()+24*60*60*1000; //plus 1 day \n                  dataInfection.push({x:ts, y: result[day][0] || 0});\n                  dataMaybeInfection.push({x:ts, y: result[day][1]||0});\n                  dataCured.push({x:ts, y: result[day][2]||0});\n                });\n                dataInfection.sort((a,b)=>a.x> b.x? 1:-1)\n                dataMaybeInfection.sort((a,b)=>a.x> b.x? 1:-1)\n                dataCured.sort((a,b)=>a.x> b.x? 1:-1)\n                setDataInfection(dataInfection);\n                setDataMaybeInfection(dataMaybeInfection);\n                setDataCured(dataCured);\n              }\n            },\n            (error) => {\n            }\n        )\n}, [])\n\n\n  return <div className=\"chart\">\n    <HighchartsReact highcharts={Highcharts}\n      options={{\n        chart: {\n          animation: false,\n          type: 'spline',\n          // height: chartHeight + \"px\"\n        },\n        title: {\n          text: 'Covid trên thế giới'\n        },\n        xAxis: {\n          gridLineWidth: 1,\n          dateTimeLabelFormats: {\n              millisecond: '%H:%M:%S.%L',\n              second: '%H:%M:%S',\n              minute: '%H:%M',\n              hour: '%H:%M',\n              day: '%e. %b',\n              week: '%e. %b',\n              month: \"%b '%y\",\n              year: '%Y'\n          },\n          type: 'datetime',\n          crosshair: true,\n        },\n        yAxis: {\n          title: {\n            text: 'Số Người'\n          },\n          min: 0\n        },\n        legend: {\n          layout: 'horizontal',\n          align: 'center',\n          enabled: true,\n          // itemDistance:  (chartWidth * 0.9 - 80 * 7) / 7,\n        },\n        plotOptions: {\n          series: {\n            marker: {\n              enabled: false,\n              radius: 3,\n            },\n            events: {\n            },\n            lineWidth: 1\n          }\n        },\n        turboThreshold: 0,\n        tooltip: {\n          positioner: function () {\n            return {\n              x: this.chart.plotLeft,\n              y: this.chart.plotTop - 30\n            };\n          },\n          shadow: false,\n          borderWidth: 0,\n          backgroundColor: 'rgba(0,0,0,0.1)',\n          shared: true,\n        },\n        series: [\n          { name: 'Lây nhiễm', id: '0', \"turboThreshold\": 0, data:dataInfection, visible: true},\n          { name: 'Chết', id: '1', \"turboThreshold\": 0, data:dataMaybeInfection,visible: true},\n          { name: 'Khỏi', id: '2', \"turboThreshold\": 0, data:dataCured,visible: true}\n        ]\n      }}\n    />\n  </div>\n}\n\nexport default ChartWorld;","import React, { useEffect } from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport ChartVN from \"./ChartVN\"\nimport ChartWorld from \"./ChartWorld\"\n\n\nconst ChartDashboard = (props) => {\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://td.fpt.ai/corona/corona-total.json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result)\n        },\n        (error) => {\n        }\n      )\n  }, [])\n\n  return <Container fluid style={{ padding: 0 }}>\n\n    <div className=\"chart-monitor row\" style={{margin:'0 20px'}} >\n      <div className=\"col-12 col-lg-6 col-xl-6\" style={{ display: 'flex' }}>\n        <div className=\"panel\" style={{ width: '100%' }}>\n          <div className=\"panel-body\" style={{ width: '100%', minHeight: '400px' }}>\n            <ChartVN />\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-6 col-xl-6\" style={{ display: 'flex' }}>\n        <div className=\"panel\" style={{ width: '100%' }}>\n          <div className=\"panel-body\" style={{ width: '100%', minHeight: '400px' }}>\n            <ChartWorld />\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </Container>\n};\n\nexport default ChartDashboard;","import React from 'react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { Link } from 'react-router-dom';\n\n\nconst Header = () => {\n  return (<div className=\"chart-monitor\">\n    <div className=\"col-12 col-lg-12 col-xl-12\">\n      <div className=\"panel\">\n        <div className=\"panel-body\" style={{ display: 'flex', justifyContent: 'flex-end', padding: '10px', margin: '20px' }}>\n          <IconButton style={{  borderRadius: '0', padding:'0 5px' }} variant=\"contained\" color=\"primary\" onClick={() => {\n          }}>\n            <Link to=\"/covid19/map\" className=\"linktag\"><RoomIcon></RoomIcon></Link>\n          </IconButton>\n          <IconButton style={{   borderRadius: '0', padding:'0 5px' }} variant=\"contained\" color=\"primary\" onClick={() => {\n          }}>\n            <Link to=\"/covid19/stats\" className=\"linktag\"><TimelineIcon></TimelineIcon></Link>\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './App.css';\nimport CovidDashboard from \"./components/CovidDashboard\";\nimport ChartDashboard from \"./components/ChartDashboard\";\nimport Header from \"./components/Header\";\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header/>\n                <Switch>\n                    <Route exact path='/covid19/' component={CovidDashboard} />\n                    <Route exact path='/covid19/map' component={CovidDashboard} />\n                    <Route exact path='/covid19/stats' component={ChartDashboard} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}